<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.0</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
  </PropertyGroup>

  <ItemGroup>
    <None Remove="ClientApp\api\messages\index.ts" />
    <None Remove="ClientApp\api\messages\MessagesController.ts" />
    <None Remove="ClientApp\api\messages\types.ts" />
    <None Remove="ClientApp\api\projects\ProjectsController.ts" />
    <None Remove="ClientApp\api\tickets\index.ts" />
    <None Remove="ClientApp\api\tickets\TicketsController.ts" />
    <None Remove="ClientApp\api\tickets\types.ts" />
    <None Remove="ClientApp\api\users\UsersController.ts" />
    <None Remove="ClientApp\App.ts" />
    <None Remove="ClientApp\components\sidebar\index.ts" />
    <None Remove="ClientApp\components\TicketsList\index.ts" />
    <None Remove="ClientApp\pages\allUsers\index.ts" />
    <None Remove="ClientApp\pages\changeUserData\index.ts" />
    <None Remove="ClientApp\pages\changeUserPassword\index.ts" />
    <None Remove="ClientApp\pages\createMessage\index.ts" />
    <None Remove="ClientApp\pages\createProject\index.ts" />
    <None Remove="ClientApp\pages\createTicket\index.ts" />
    <None Remove="ClientApp\pages\deleteProject\index.ts" />
    <None Remove="ClientApp\pages\deleteTicket\index.ts" />
    <None Remove="ClientApp\pages\editProject\index.ts" />
    <None Remove="ClientApp\pages\editTicket\index.ts" />
    <None Remove="ClientApp\pages\login\index.ts" />
    <None Remove="ClientApp\pages\messageAttachFiles\index.ts" />
    <None Remove="ClientApp\pages\pendingUsers\index.ts" />
    <None Remove="ClientApp\pages\projectDetails\index.ts" />
    <None Remove="ClientApp\pages\projects\index.ts" />
    <None Remove="ClientApp\pages\registerUser\index.ts" />
    <None Remove="ClientApp\pages\ticketAttachFiles\index.ts" />
    <None Remove="ClientApp\pages\ticketDetails\index.ts" />
    <None Remove="ClientApp\pages\tickets\index.ts" />
    <None Remove="ClientApp\router.ts" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="3.2.0" />
    <PackageReference Include="Microsoft.AspNetCore.All" Version="2.0.7" />
  </ItemGroup>

  <ItemGroup>
    <DotNetCliToolReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Tools" Version="2.0.3" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\TicketingSystem.Data\TicketingSystem.Data.csproj" />
    <ProjectReference Include="..\TicketingSystem.Implementations\TicketingSystem.Implementations.csproj" />
    <ProjectReference Include="..\TicketingSystem.Services\TicketingSystem.Services.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Content Update="Views\Users\Register.cshtml">
      <Pack>$(IncludeRazorContentInPack)</Pack>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Include="ClientApp\api\messages\index.ts" />
    <TypeScriptCompile Include="ClientApp\api\messages\MessagesController.ts" />
    <TypeScriptCompile Include="ClientApp\api\messages\types.ts" />
    <TypeScriptCompile Include="ClientApp\api\projects\ProjectsController.ts" />
    <TypeScriptCompile Include="ClientApp\api\tickets\index.ts" />
    <TypeScriptCompile Include="ClientApp\api\tickets\TicketsController.ts" />
    <TypeScriptCompile Include="ClientApp\api\tickets\types.ts" />
    <TypeScriptCompile Include="ClientApp\api\users\UsersController.ts" />
    <TypeScriptCompile Include="ClientApp\App.ts" />
    <TypeScriptCompile Include="ClientApp\components\sidebar\index.ts" />
    <TypeScriptCompile Include="ClientApp\components\TicketsList\index.ts" />
    <TypeScriptCompile Include="ClientApp\pages\allUsers\index.ts" />
    <TypeScriptCompile Include="ClientApp\pages\changeUserData\index.ts" />
    <TypeScriptCompile Include="ClientApp\pages\changeUserPassword\index.ts" />
    <TypeScriptCompile Include="ClientApp\pages\createMessage\index.ts" />
    <TypeScriptCompile Include="ClientApp\pages\createProject\index.ts" />
    <TypeScriptCompile Include="ClientApp\pages\createTicket\index.ts" />
    <TypeScriptCompile Include="ClientApp\pages\deleteProject\index.ts" />
    <TypeScriptCompile Include="ClientApp\pages\deleteTicket\index.ts" />
    <TypeScriptCompile Include="ClientApp\pages\editProject\index.ts" />
    <TypeScriptCompile Include="ClientApp\pages\editTicket\index.ts" />
    <TypeScriptCompile Include="ClientApp\pages\login\index.ts" />
    <TypeScriptCompile Include="ClientApp\pages\messageAttachFiles\index.ts" />
    <TypeScriptCompile Include="ClientApp\pages\pendingUsers\index.ts" />
    <TypeScriptCompile Include="ClientApp\pages\projectDetails\index.ts" />
    <TypeScriptCompile Include="ClientApp\pages\projects\index.ts" />
    <TypeScriptCompile Include="ClientApp\pages\registerUser\index.ts" />
    <TypeScriptCompile Include="ClientApp\pages\ticketAttachFiles\index.ts" />
    <TypeScriptCompile Include="ClientApp\pages\ticketDetails\index.ts" />
    <TypeScriptCompile Include="ClientApp\pages\tickets\index.ts" />
    <TypeScriptCompile Include="ClientApp\router.ts" />
  </ItemGroup>

  <Target Name="DebugRunWebpack" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('wwwroot\dist') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />

    <!-- In development, the dist files won't exist on the first run or when cloning to
         a different machine, so rebuild them if not already present. -->
    <Message Importance="high" Text="Performing first-run Webpack build..." />
    <Exec Command="node node_modules/webpack/bin/webpack.js --config webpack.config.vendor.js" />
    <Exec Command="node node_modules/webpack/bin/webpack.js" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec Command="npm install" />
    <Exec Command="node node_modules/webpack/bin/webpack.js --config webpack.config.vendor.js --env.prod" />
    <Exec Command="node node_modules/webpack/bin/webpack.js --env.prod" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="wwwroot\dist\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
